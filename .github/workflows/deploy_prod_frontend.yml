name: Deploy MOONSHOT to VPS (PROD)

on: workflow_dispatch

env:
  BRANCH: prod
  NEXT_PUBLIC_PROGRESSIER_ID: ${{ secrets.NEXT_PUBLIC_PROGRESSIER_ID }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_GOOGLE_AUTH_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_AUTH_CLIENT_ID }}
  NEXT_PUBLIC_SITE_URL: ${{ vars.NEXT_PUBLIC_SITE_URL_PROD }}
  SITE_URL: ${{ vars.SITE_URL_PROD }}
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}

  GOOGLE_AUTH_CLIENT_ID: ${{ secrets.GOOGLE_AUTH_CLIENT_ID }}
  GOOGLE_AUTH_SECRET: ${{ secrets.GOOGLE_AUTH_SECRET }}
  GOOGLE_AUTH_REDIRECT_URL: ${{ secrets.GOOGLE_AUTH_REDIRECT_URL }}

  BIRDEYE_URL_API: ${{ secrets.BIRDEYE_URL_API }}
  BIRDEYE_X_API_KEY: ${{ secrets.BIRDEYE_X_API_KEY }}

  GECKO_URL_API: ${{ secrets.GECKO_URL_API }}
  GECKO_API_KEY: ${{ secrets.GECKO_API_KEY }}

  SHIFT4_URL: ${{ secrets.SHIFT4_URL }}
  SHIFT4_API_KEY: ${{ secrets.SHIFT4_API_KEY }}
  
  SOLANA_RPC_PROVIDER: ${{ secrets.SOLANA_RPC_PROVIDER }}
  WALLET_MAINNET: ${{ secrets.WALLET_MAINNET }}
  
  TWITTER_AUTH_REDIRECT_URL: ${{ secrets.TWITTER_AUTH_REDIRECT_URL }}


  
jobs:
  Update-server:
    runs-on: ubuntu-latest
    steps:
      - name: Pull changes in prod server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USERNAME }}
          password: ${{ secrets.PROD_SSH_PASSWORD }}
          port: ${{ secrets.PROD_SSH_PORT }}
          script: |
            cd ${{ vars.PROD_PATH_TO_DEPLOY }}
            branch=$(git rev-parse --abbrev-ref HEAD)   # chech current branch
            echo "Current branch is $branch"
            if [[ "$branch" != "${{ env.BRANCH }}" ]]; then           
              git checkout ${{ env.BRANCH }}
            fi
            git fetch --all
            git reset --hard origin/${{ env.BRANCH }}
            git pull https://${{ secrets.GIT_USER }}:${{ secrets.GIT_PASSWORD }}@github.com/Moonshot-Era/moonshot ${{ env.BRANCH }}

      - name: Install frontend deps in prod server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USERNAME }}
          password: ${{ secrets.PROD_SSH_PASSWORD }}
          port: ${{ secrets.PROD_SSH_PORT }}
          script: |
            cd ${{ vars.PROD_PATH_TO_DEPLOY }}/frontend
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            npm install --legacy-peer-deps

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install npm dependencies
        run: |
          cd frontend
          npm install --legacy-peer-deps

      - name: Run build task
        run: |
          cd frontend
          npm run build --if-present

      - name: Delete previos build in server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USERNAME }}
          password: ${{ secrets.PROD_SSH_PASSWORD }}
          port: ${{ secrets.PROD_SSH_PORT }}
          script: |
            # cd ${{ vars.PROD_PATH_TO_DEPLOY }}/frontend
            if [ -d '${{ vars.PROD_PATH_TO_DEPLOY }}/frontend/build' ]; then
              echo "Build finded! EXTERMINATE!!!!"
              rm -rf ${{ vars.PROD_PATH_TO_DEPLOY }}/frontend/build
            else
              echo "Build not exist. Continue working"
            fi

      - name: Deploy Build to Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USERNAME }}
          password: ${{ secrets.PROD_SSH_PASSWORD }}
          port: ${{ secrets.PROD_SSH_PORT }}
          source: 'frontend/.next,frontend/public'
          target: ${{ vars.PROD_PATH_TO_DEPLOY }}

  Restart-PM2-service:
    runs-on: ubuntu-latest
    needs: [build-frontend, Update-server]
    steps:
      - name: Restart PM2 service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USERNAME }}
          password: ${{ secrets.PROD_SSH_PASSWORD }}
          port: ${{ secrets.PROD_SSH_PORT }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd ${{ vars.PROD_PATH_TO_DEPLOY }}
            echo "Restart service"
            pm2 restart ecosystem.config.js --only prod.frontend.moonshot.tech